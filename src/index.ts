import { SocietySimulator } from "./society-simulator.js";

class SocietyApp {
  private simulator: SocietySimulator;

  constructor() {
    this.simulator = new SocietySimulator();
  }

  async start(): Promise<void> {
    console.log("üåü CH√ÄO M·ª™NG ƒê·∫æN V·ªöI H·ªÜ TH·ªêNG GI·∫¢ L·∫¨P X√É H·ªòI AI üåü");
    console.log("================================================");
    console.log(
      "H·ªá th·ªëng s·ª≠ d·ª•ng Ollama AI ƒë·ªÉ m√¥ ph·ªèng h√†nh vi c·ªßa t·ª´ng c√° nh√¢n"
    );
    console.log("M·ªói ng∆∞·ªùi d√¢n c√≥ t√≠nh c√°ch, k·ªπ nƒÉng v√† m·ª•c ti√™u ri√™ng");
    console.log("H·ªç s·∫Ω t·ª± do h√†nh ƒë·ªông v√† x√£ h·ªôi s·∫Ω ph√°t tri·ªÉn t·ª± nhi√™n");
    console.log("================================================\n");

    // Ki·ªÉm tra Ollama
    console.log("üîç ƒêang ki·ªÉm tra k·∫øt n·ªëi Ollama...");
    try {
      // Kh·ªüi ƒë·ªông simulation
      await this.simulator.startSimulation();
    } catch (error) {
      console.error("‚ùå L·ªói khi ch·∫°y simulation:", error);
      console.log("\nüìã H∆∞·ªõng d·∫´n kh·∫Øc ph·ª•c:");
      console.log("1. C√†i ƒë·∫∑t Ollama: https://ollama.ai/");
      console.log("2. Ch·∫°y: ollama run llama3.2");
      console.log("3. ƒê·∫£m b·∫£o Ollama server ƒëang ch·∫°y tr√™n port 11434");
    }
  }

  stop(): void {
    this.simulator.stopSimulation();
  }
}

// Kh·ªüi ch·∫°y ·ª©ng d·ª•ng
const app = new SocietyApp();

// X·ª≠ l√Ω signal ƒë·ªÉ d·ª´ng gracefully
process.on("SIGINT", () => {
  console.log("\nüëã ƒêang d·ª´ng h·ªá th·ªëng...");
  app.stop();
  process.exit(0);
});

process.on("SIGTERM", () => {
  console.log("\nüëã ƒêang d·ª´ng h·ªá th·ªëng...");
  app.stop();
  process.exit(0);
});

// B·∫Øt ƒë·∫ßu
app.start().catch((error) => {
  console.error("‚ùå L·ªói kh·ªüi ƒë·ªông:", error);
  process.exit(1);
});
